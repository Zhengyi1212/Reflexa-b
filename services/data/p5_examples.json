[
  {
    "id": "p5_adv_001",
    "tag": "炫彩彗星拖尾",
    "image": "/image/1.png",
    "code": "let particles = [];\nlet hue = 0;\n\nfunction setup() {\n  createCanvas(800, 1200);\n  colorMode(HSB, 360, 100, 100, 100);\n  noStroke();\n}\n\nfunction draw() {\n  background(0, 0, 10, 25);\n  hue += 0.5;\n  if (hue > 360) hue = 0;\n\n  if (mouseIsPressed || touches.length > 0) {\n    for (let i = 0; i < 2; i++) {\n      particles.push(new Particle(mouseX, mouseY, hue));\n    }\n  }\n\n  for (let i = particles.length - 1; i >= 0; i--) {\n    particles[i].update();\n    particles[i].show();\n    if (particles[i].isFinished()) {\n      particles.splice(i, 1);\n    }\n  }\n}\n\nclass Particle {\n  constructor(x, y, h) {\n    this.pos = createVector(x, y);\n    this.vel = p5.Vector.random2D().mult(random(1, 4));\n    this.acc = createVector(0, 0.05);\n    this.lifespan = 100;\n    this.baseHue = h;\n  }\n\n  isFinished() {\n    return this.lifespan < 0;\n  }\n\n  update() {\n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    this.lifespan -= 2;\n  }\n\n  show() {\n    let currentHue = (this.baseHue + (100 - this.lifespan) * 0.5) % 360;\n    let saturation = this.lifespan;\n    let brightness = 100;\n    fill(currentHue, saturation, brightness, this.lifespan);\n    let d = map(this.lifespan, 0, 100, 0, 20);\n    ellipse(this.pos.x, this.pos.y, d, d);\n  }\n}"
  },
  {
    "id": "p5_adv_002",
    "tag": "有机水母群",
    "image": "/image/2.png",
    "code": "let jellies = [];\n\nfunction setup() {\n  createCanvas(800, 1200);\n  for (let i = 0; i < 10; i++) {\n    jellies.push(new Jelly(random(width), random(height)));\n  }\n}\n\nfunction draw() {\n  background(0, 25, 50);\n  for (let jelly of jellies) {\n    jelly.update();\n    jelly.display();\n  }\n}\n\nfunction mousePressed() {\n  jellies.push(new Jelly(mouseX, mouseY));\n}\n\nclass Jelly {\n  constructor(x, y) {\n    this.pos = createVector(x, y);\n    this.vel = createVector(0, -1);\n    this.noiseOffsetX = random(1000);\n    this.bodySize = random(20, 50);\n    this.hue = random(180, 240);\n    this.tentacles = [];\n    for (let i = 0; i < 8; i++) {\n      this.tentacles.push(new Tentacle(this.pos, this.bodySize));\n    }\n  }\n\n  update() {\n    let dirX = map(noise(this.noiseOffsetX), 0, 1, -0.5, 0.5);\n    this.vel.x = dirX;\n    this.pos.add(this.vel);\n    this.noiseOffsetX += 0.01;\n\n    if (this.pos.y < -this.bodySize) this.pos.y = height + this.bodySize;\n    \n    for (let t of this.tentacles) {\n      t.update(this.pos);\n    }\n  }\n\n  display() {\n    noStroke();\n    fill(this.hue, 50, 100, 40);\n    ellipse(this.pos.x, this.pos.y, this.bodySize, this.bodySize * 1.2);\n    for (let t of this.tentacles) {\n      t.display(this.hue);\n    }\n  }\n}\n\nclass Tentacle {\n  constructor(parentPos, parentSize) {\n    this.segments = [];\n    this.numSegments = 15;\n    for (let i = 0; i < this.numSegments; i++) {\n      this.segments.push(parentPos.copy());\n    }\n    this.len = parentSize / this.numSegments;\n  }\n\n  update(parentPos) {\n    this.segments[0] = parentPos.copy();\n    for (let i = 1; i < this.numSegments; i++) {\n      let prev = this.segments[i - 1];\n      let current = this.segments[i];\n      let angle = atan2(current.y - prev.y, current.x - prev.x);\n      current.x = prev.x + cos(angle) * this.len;\n      current.y = prev.y + sin(angle) * this.len + 0.5;\n    }\n  }\n\n  display(hue) {\n    stroke(hue, 60, 100, 60);\n    strokeWeight(2);\n    noFill();\n    beginShape();\n    for (let seg of this.segments) {\n      vertex(seg.x, seg.y);\n    }\n    endShape();\n  }\n}"
  },
  {
    "id": "p5_adv_003",
    "tag": "双极引力场",
    "image": "/image/3.png",
    "code": "let particles = [];\nconst numParticles = 300;\nlet attractor1, attractor2;\n\nfunction setup() {\n  createCanvas(800, 1200);\n  for (let i = 0; i < numParticles; i++) {\n    particles.push(new Particle(random(width), random(height)));\n  }\n  colorMode(HSB);\n}\n\nfunction draw() {\n  background(0, 0, 0, 0.1);\n  attractor1 = createVector(width / 4, height / 2);\n  attractor2 = createVector(mouseX, mouseY);\n  \n  strokeWeight(2);\n  for (let p of particles) {\n    p.attracted(attractor1, 1);\n    p.attracted(attractor2, -1.2);\n    p.update();\n    p.show();\n  }\n}\n\nclass Particle {\n  constructor(x, y) {\n    this.pos = createVector(x, y);\n    this.vel = createVector();\n    this.acc = createVector();\n    this.maxSpeed = 5;\n  }\n\n  attracted(target, polarity) {\n    let force = p5.Vector.sub(target, this.pos);\n    let d = force.mag();\n    d = constrain(d, 5, 100);\n    let strength = (polarity * 15) / (d * d);\n    force.setMag(strength);\n    this.acc.add(force);\n  }\n\n  update() {\n    this.vel.add(this.acc);\n    this.vel.limit(this.maxSpeed);\n    this.pos.add(this.vel);\n    this.acc.mult(0);\n  }\n\n  show() {\n    let angle = this.vel.heading();\n    let hue = map(angle, -PI, PI, 0, 360);\n    stroke(hue, 80, 100, 0.6);\n    point(this.pos.x, this.pos.y);\n  }\n}"
  },
  {
    "id": "p5_adv_004",
    "tag": "柏林噪声流场",
    "image": "/image/4.png",
    "code": "let particles = [];\nlet noiseScale = 0.01;\nlet numParticles = 500;\n\nfunction setup() {\n  createCanvas(800, 1200);\n  for(let i = 0; i < numParticles; i++) {\n    particles[i] = new Particle();\n  }\n  background(0);\n  colorMode(HSB);\n}\n\nfunction draw() {\n  let noiseOffsetX = mouseX * 0.001;\n  let noiseOffsetY = mouseY * 0.001;\n\n  for(let p of particles) {\n    p.update(noiseOffsetX, noiseOffsetY);\n    p.show();\n    p.edges();\n  }\n}\n\nclass Particle {\n  constructor() {\n    this.pos = createVector(random(width), random(height));\n    this.vel = createVector(0, 0);\n    this.acc = createVector(0, 0);\n    this.maxSpeed = 2;\n  }\n\n  update(offsetX, offsetY) {\n    let angle = noise(this.pos.x * noiseScale + offsetX, this.pos.y * noiseScale + offsetY) * TWO_PI * 4;\n    let force = p5.Vector.fromAngle(angle);\n    force.setMag(0.1);\n    this.acc.add(force);\n    \n    this.vel.add(this.acc);\n    this.vel.limit(this.maxSpeed);\n    this.pos.add(this.vel);\n    this.acc.mult(0);\n  }\n\n  show() {\n    let hue = map(this.pos.x, 0, width, 180, 300);\n    stroke(hue, 100, 100, 0.05);\n    strokeWeight(1.5);\n    point(this.pos.x, this.pos.y);\n  }\n\n  edges() {\n    if (this.pos.x > width) this.pos.x = 0;\n    if (this.pos.x < 0) this.pos.x = width;\n    if (this.pos.y > height) this.pos.y = 0;\n    if (this.pos.y < 0) this.pos.y = height;\n  }\n}"
  },
  {
    "id": "p5_adv_005",
    "tag": "递归树",
    "image": "/image/5.png",
    "code": "var angle = 0;\nvar len = 120;\n\nfunction setup() {\n  createCanvas(800, 1200);\n}\n\nfunction draw() {\n  background(10, 20, 30);\n  angle = map(mouseX, 0, width, 0, PI / 2);\n  len = map(mouseY, 0, height, 50, 200);\n  \n  translate(width / 2, height * 0.5); \n  stroke(255);\n  branch(len);\n}\n\nfunction branch(len) {\n  strokeWeight(max(1, len / 10));\n  line(0, 0, 0, -len);\n  translate(0, -len);\n\n  if (len > 4) {\n    push();\n    rotate(angle);\n    branch(len * 0.67);\n    pop();\n\n    push();\n    rotate(-angle);\n    branch(len * 0.67);\n    pop();\n  }\n}"
  },
  {
    "id": "p5_adv_006",
    "tag": "万花尺画板",
    "image": "/image/6.png",
    "code": "var angle = 0;\nvar r = 200;\nvar hue = 0;\n\nfunction setup() {\n  createCanvas(800, 1200);\n  background(0);\n  colorMode(HSB);\n  strokeWeight(2);\n}\n\nfunction draw() {\n  let speed = map(mouseX, 0, width, 0.01, 0.2);\n  let ratio = map(mouseY, 0, height, 0.1, 2);\n  \n  let x = r * cos(angle) + (r * ratio) * cos(angle * 5);\n  let y = r * sin(angle) + (r * ratio) * sin(angle * 5);\n  \n  translate(width / 2, height / 2);\n  stroke(hue, 100, 100, 0.8);\n  point(x, y);\n  \n  angle += speed;\n  hue += 0.5;\n  if (hue > 360) hue = 0;\n}\n\nfunction mousePressed() {\n  background(0);\n}"
  }
]
